<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
	<mvc:annotation-driven />
	<context:component-scan base-package="controllers" />
		
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/" />
	<!-- This viewResolver is looking in the directory listed below. ModelAndView is integrated into spring and automatically looks for viewResolver -->
	<bean id="viewResolver"
	  class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	    <property name="prefix">
		  <value>/WEB-INF/pages/</value>
		</property>		
		<property name="suffix">
		  <value>.jsp</value>
		</property>
	</bean>	
	<!-- When I make indexController, this BEAN sets the MODELANDVIEW attributes with the value INDEX. All these BEAN statements are instantiated at beginning of the program. These beans are injected in appropriate classes -->
	<!-- All the red text in console, you can actually see the beans being injected -->
	 
	 <bean id="submitDataController" class="controllers.SubmitDataController">
      <property name="modelandview" value="books"/>
    </bean>
	
	
	<bean id="indexController" class="controllers.IndexController">
      <property name="modelandview" value="index"/>
    </bean> 
    
    <bean id="testController" class="controllers.TestController">
  	  <property name="modelandview" value="test"/>
  	  <property name="testModel" ref="testModel"/>
    </bean>
 
    <bean id="entertainmentModel" class="models.EntertainmentModel">
  	  <property name="data" ref="hibernateDataDao"/>
    </bean>		
    
    <bean id="testModel" class="models.TestModel">
      <property name="data" ref="hibernateDataDao"/>     
    </bean> 
    
    <bean id="hibernateDataDao" class="dao.HibernateDataDAO">
      <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <bean id="entertainmentController" class="controllers.EntertainmentController">
      <property name="bookModel" value="books"/>
      <property name="movieModel" value="movies"/>
      <property name="musicModel" value="music"/>
      <property name="contactsModel" value="contacts"/>
      <property name="model" ref="entertainmentModel"/>
    </bean>
    
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/databaseproject" />
        <property name="username" value="root" />
        <property name="password" value="Someone1" />
    </bean>
    
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mappingResources">
            <list>
                <value>HibernateData.hbm.xml</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <value>
                hibernate.dialect=org.hibernate.dialect.MySQLDialect
                hibernate.default_schema=databaseproject
            </value>
        </property>
    </bean>
</beans>
